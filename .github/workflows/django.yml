name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Dependencies
      working-directory: recognizing_famous_people
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django
    
    - name: Run Migrations
      working-directory: recognizing_famous_people
      run: |
        python manage.py makemigrations
        python manage.py migrate
    
    - name: Run Tests
      working-directory: recognizing_famous_people
      env:
        DJANGO_SETTINGS_MODULE: recognizing_famous_people.settings
        SECRET_KEY: test-key
        DEBUG: True
      run: |
        python manage.py test members

    - name: Check Code Style
      working-directory: recognizing_famous_people
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Create Test Directories
      if: always()
      working-directory: recognizing_famous_people
      run: |
        mkdir -p test-results/
        mkdir -p coverage/

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          recognizing_famous_people/test-results/
          recognizing_famous_people/coverage/
        if-no-files-found: ignore
